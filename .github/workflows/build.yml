# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v4.2.1
        with:
          distribution: 'zulu'
          java-version: '17'
    
      # Setup flutter environment
      - uses: subosito/flutter-action@v1
          
      - name: Update all submodules
        run: git submodule update --recursive --remote --init
      
      - name: Create keystore file
        env:
          KEYSTORE_BASE64: ${{secrets.KEYSTORE_BASE64}}
        run: echo $KEYSTORE_BASE64 | base64 -d > ./android/upload-keystore.jks

      - name: Create key.properties
        env:
          KEYSTORE_PASSWORD: ${{secrets.KEYSTORE_PASSWORD}}
        run: |
          echo storePassword=$KEYSTORE_PASSWORD > ./android/key.properties
          echo keyPassword=$KEYSTORE_PASSWORD >> ./android/key.properties
          echo keyAlias=upload >> ./android/key.properties
          echo storeFile=../upload-keystore.jks >> ./android/key.properties

      - name: Build
        run: |
          flutter pub get
          flutter build apk --no-tree-shake-icons

      # Nightly Release
      - name: Update Nightly Release
        uses: andelf/nightly-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly
          name: "KeylolF Nightly Release"
          prerelease: true
          files: |
            ./build/app/outputs/flutter-apk/app-release.apk
